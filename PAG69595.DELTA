OBJECT Page 69595 G/L Account Turnover
{
  OBJECT-PROPERTIES
  {
    Date=11/10/17;
    Time=[ 8:41:10 PM];
    Modified=Yes;
    Version List=RUL;
  }
  PROPERTIES
  {
    CaptionML=ENU=G/L Account Turnover;
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table15;
    PageType=Worksheet;
    RefreshOnActivate=Yes;
    OnOpenPage=BEGIN
                 GLSetup.GET;
                 IF PeriodType = PeriodType::"Accounting Period" THEN
                   FindUserPeriod('')
                 ELSE
                   FindPeriod('');
                 DateFilter := GETFILTER("Date Filter");
                 IF GLAccountFilter <> '' THEN
                   SETFILTER("No.",GLAccountFilter);
               END;

    OnAfterGetRecord=BEGIN
                       NameIndent := 0;
                       CalculateAmounts(BalanceAmounts);
                       NoOnFormat;
                       NameOnFormat;
                       DebitAmountOnFormat;
                       CreditAmountOnFormat;
                       BalanceatDateOnFormat;
                       NetChangeOnFormat;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 24      ;1   ;ActionGroup;
                      CaptionML=ENU=G/L Account }
      { 33      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Card;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 17;
                      RunPageLink=No.=FIELD(No.),
                                  Date Filter=FIELD(Date Filter),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                                  Budget Filter=FIELD(Budget Filter),
                                  Business Unit Filter=FIELD(Business Unit Filter);
                      Image=EditLines }
      { 34      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Ledger Entries;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 20;
                      RunPageView=SORTING(G/L Account No.);
                      RunPageLink=G/L Account No.=FIELD(No.);
                      Image=GLRegisters;
                      PromotedCategory=Process }
      { 37      ;2   ;Action    ;
                      CaptionML=ENU=&Comments;
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(G/L Account),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 41      ;2   ;Action    ;
                      CaptionML=ENU=Receivables-Payables;
                      ApplicationArea=#Suite;
                      RunObject=Page 159;
                      Image=ReceivablesPayables }
      { 1210004 ;1   ;ActionGroup;
                      CaptionML=ENU=Balance;
                      Image=Balance }
      { 1210005 ;2   ;Action    ;
                      CaptionML=ENU=G/L &Account Balance;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 415;
                      RunPageLink=No.=FIELD(No.),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                                  Business Unit Filter=FIELD(Business Unit Filter);
                      Image=GLAccountBalance }
      { 1210006 ;2   ;Action    ;
                      CaptionML=ENU=G/L &Balance;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 414;
                      Image=GLBalance }
      { 1210007 ;2   ;Action    ;
                      CaptionML=ENU=G/L Balance by &Dimension;
                      ApplicationArea=#Suite;
                      RunObject=Page 408;
                      Image=GLBalanceDimension }
      { 1210008 ;2   ;Separator  }
      { 1210009 ;2   ;Action    ;
                      CaptionML=ENU=G/L Account Balance/Bud&get;
                      ApplicationArea=#Suite;
                      RunObject=Page 154;
                      RunPageLink=No.=FIELD(No.),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                                  Business Unit Filter=FIELD(Business Unit Filter);
                      Image=Period }
      { 1210010 ;2   ;Action    ;
                      CaptionML=ENU=G/L Balance/B&udget;
                      ApplicationArea=#Suite;
                      RunObject=Page 422;
                      Image=GeneralLedger }
      { 1210011 ;2   ;Separator  }
      { 1210012 ;2   ;Action    ;
                      CaptionML=ENU=G/L Turnover by Customers;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 69596;
                      RunPageLink=G/L Account Filter=FIELD(No.),
                                  Date Filter=FIELD(Date Filter);
                      Image=CustomerLedger }
      { 1210013 ;2   ;Action    ;
                      CaptionML=ENU=G/L Turnover by Vendors;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 69597;
                      RunPageLink=G/L Account Filter=FIELD(No.),
                                  Date Filter=FIELD(Date Filter);
                      Image=VendorLedger }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 20      ;1   ;Action    ;
                      CaptionML=ENU=Previous Period;
                      ToolTipML=ENU=Previous Period;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('<=');
                                 DateFilter := GETFILTER("Date Filter");
                               END;
                                }
      { 21      ;1   ;Action    ;
                      CaptionML=ENU=Next Period;
                      ToolTipML=ENU=Next Period;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('>=');
                                 DateFilter := GETFILTER("Date Filter");
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1903121901;1;Group  ;
                CaptionML=ENU=Options }

    { 2   ;2   ;Field     ;
                CaptionML=ENU=Date Filter;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DateFilter;
                OnValidate=VAR
                             ApplicationManagement@1000 : Codeunit 1;
                           BEGIN
                             IF ApplicationManagement.MakeDateFilter(DateFilter) = 0 THEN;
                             SETFILTER("Date Filter",DateFilter);
                             DateFilter := GETFILTER("Date Filter");
                             CurrPage.UPDATE;
                           END;
                            }

    { 14  ;2   ;Field     ;
                CaptionML=ENU=View by;
                ToolTipML=ENU=Day;
                OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             IF PeriodType = PeriodType::"Accounting Period" THEN
                               FindUserPeriod('')
                             ELSE
                               FindPeriod('');
                             DateFilter := GETFILTER("Date Filter");
                             CurrPage.UPDATE;
                           END;
                            }

    { 7   ;2   ;Field     ;
                Name=G/L Account Filter;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GLAccountFilter;
                TableRelation="G/L Account".No.;
                OnValidate=BEGIN
                             SETFILTER("No.",GLAccountFilter);
                             CurrPage.UPDATE;
                           END;
                            }

    { 6   ;2   ;Field     ;
                Name=Business Unit Filter;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BusinessUnitFilter;
                TableRelation="Business Unit";
                OnValidate=BEGIN
                             SETFILTER("Business Unit Filter",BusinessUnitFilter);
                             CurrPage.UPDATE;
                           END;
                            }

    { 4   ;2   ;Field     ;
                Name=Global Dimension 1 Filter;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GlobalDimension1Filter;
                CaptionClass='1,3,1';
                OnValidate=BEGIN
                             SETFILTER("Global Dimension 1 Filter",GlobalDimension1Filter);
                             CurrPage.UPDATE;
                           END;

                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(GLSetup."Global Dimension 1 Code",Text));
                         END;
                          }

    { 3   ;2   ;Field     ;
                Name=Global Dimension 2 Filter;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GlobalDimension2Filter;
                CaptionClass='1,3,2';
                OnValidate=BEGIN
                             SETFILTER("Global Dimension 2 Filter",GlobalDimension2Filter);
                             CurrPage.UPDATE;
                           END;

                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(GLSetup."Global Dimension 2 Code",Text));
                         END;
                          }

    { 5   ;1   ;Group     ;
                Editable=FALSE;
                IndentationColumnName=NameIndent;
                IndentationControls=Name;
                GroupType=Repeater }

    { 1210002;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No.";
                Style=Strong;
                StyleExpr=NoEmphasize }

    { 1210000;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name;
                Style=Strong;
                StyleExpr=NameEmphasize }

    { 31  ;2   ;Field     ;
                CaptionML=ENU=Starting Balance;
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr=BalanceAmounts[BalanceType::StartBal];
                OnDrillDown=BEGIN
                              DrillDownGLEntry(4);
                            END;
                             }

    { 1210022;2;Field     ;
                Name=StartingBalanceDebit;
                CaptionML=ENU=Starting Debit Balance;
                BlankZero=Yes;
                SourceExpr=BalanceAmounts[BalanceType::StartBalDebit];
                Visible=FALSE }

    { 1210020;2;Field     ;
                Name=StartingBalanceCredit;
                CaptionML=ENU=Starting Credit Balance;
                BlankZero=Yes;
                SourceExpr=BalanceAmounts[BalanceType::StartBalCredit];
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                BlankNumbers=BlankZero;
                SourceExpr="Debit Amount";
                Style=Strong;
                StyleExpr=DebitAmountEmphasize;
                OnDrillDown=BEGIN
                              DrillDownGLEntry(0);
                            END;
                             }

    { 12  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                BlankNumbers=BlankZero;
                SourceExpr="Credit Amount";
                Style=Strong;
                StyleExpr=CreditAmountEmphasize;
                OnDrillDown=BEGIN
                              DrillDownGLEntry(1);
                            END;
                             }

    { 45  ;2   ;Field     ;
                Name=Balance at End Period;
                CaptionML=ENU=Balance at End Period;
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Balance at Date";
                Style=Strong;
                StyleExpr=BalanceEndPeriodEmphasize }

    { 1210024;2;Field     ;
                Name=EndingBalanceDebit;
                CaptionML=ENU=Ending Debit Balance;
                BlankZero=Yes;
                SourceExpr=BalanceAmounts[BalanceType::EndBalDebit];
                Visible=FALSE }

    { 1210026;2;Field     ;
                Name=EndingBalanceCredit;
                CaptionML=ENU=Ending Credit Balance;
                BlankZero=Yes;
                SourceExpr=BalanceAmounts[BalanceType::EndBalCredit];
                Visible=FALSE }

    { 35  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Net Change";
                Visible=FALSE;
                Style=Strong;
                StyleExpr=NetChangeEmphasize }

    { 57  ;2   ;Field     ;
                CaptionML=ENU=ACY Balance at Begin Period;
                BlankZero=Yes;
                SourceExpr=BalanceAmounts[BalanceType::StartBalACY];
                Visible=FALSE;
                OnDrillDown=BEGIN
                              DrillDownGLEntry(5);
                            END;
                             }

    { 59  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Add.-Currency Debit Amount";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              DrillDownGLEntry(2);
                            END;
                             }

    { 61  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Add.-Currency Credit Amount";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              DrillDownGLEntry(3);
                            END;
                             }

    { 55  ;2   ;Field     ;
                CaptionML=ENU=ACY Balance at End Period;
                BlankZero=Yes;
                SourceExpr="Add.-Currency Balance at Date";
                Visible=FALSE }

    { 1   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Additional-Currency Net Change";
                Visible=FALSE }

    { 1902736301;1;Group  ;
                CaptionML=ENU=Source }

    { 1470002;2;Field     ;
                CaptionML=ENU=Source Type Filter;
                OptionCaptionML=ENU=" ,Customer,Vendor,Bank Account,Fixed Asset";
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SourceType;
                OnValidate=BEGIN
                             SourceTypeOnAfterValidate;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1470004;2;Field     ;
                CaptionML=ENU=Source No. Filter;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SourceNo;
                OnValidate=BEGIN
                             UpdateSourceNoFilter;
                           END;

                OnLookup=VAR
                           CustList@1470000 : Page 22;
                           VendList@1470003 : Page 27;
                           FAList@1470004 : Page 5601;
                           BankAccList@1470005 : Page 371;
                         BEGIN
                           CASE SourceType OF
                             SourceType::Customer:
                               BEGIN
                                 CLEAR(CustList);
                                 Cust."No." := SourceNo;
                                 CustList.SETRECORD(Cust);
                                 CustList.LOOKUPMODE(TRUE);
                                 IF CustList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                   CustList.GETRECORD(Cust);
                                   SourceNo := Cust."No.";
                                 END;
                               END;
                             SourceType::Vendor:
                               BEGIN
                                 CLEAR(VendList);
                                 Vend."No." := SourceNo;
                                 VendList.SETRECORD(Vend);
                                 VendList.LOOKUPMODE(TRUE);
                                 IF VendList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                   VendList.GETRECORD(Vend);
                                   SourceNo := Vend."No.";
                                 END;
                               END;
                             SourceType::"Bank Account":
                               BEGIN
                                 CLEAR(BankAccList);
                                 BankAcc."No." := SourceNo;
                                 BankAccList.SETRECORD(BankAcc);
                                 BankAccList.LOOKUPMODE(TRUE);
                                 IF BankAccList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                   BankAccList.GETRECORD(BankAcc);
                                   SourceNo := BankAcc."No.";
                                 END;
                               END;
                             SourceType::"Fixed Asset":
                               BEGIN
                                 CLEAR(FAList);
                                 FA."No." := SourceNo;
                                 FAList.SETRECORD(FA);
                                 FAList.LOOKUPMODE(TRUE);
                                 IF FAList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                   FAList.GETRECORD(FA);
                                   SourceNo := FA."No.";
                                 END;
                               END;
                           END;
                           UpdateSourceNoFilter;
                         END;
                          }

  }
  CODE
  {
    VAR
      GLAcc@1470000 : Record 15;
      GLEntry@1470001 : Record 17;
      Cust@1470005 : Record 18;
      Vend@1470006 : Record 23;
      BankAcc@1470008 : Record 270;
      FA@1470007 : Record 5600;
      GLSetup@1005 : Record 98;
      DateFilter@1000 : Text;
      GLAccountFilter@1004 : Code[250];
      BusinessUnitFilter@1003 : Code[250];
      GlobalDimension1Filter@1002 : Code[250];
      GlobalDimension2Filter@1001 : Code[250];
      PeriodType@1210000 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      BalanceAmounts@1007 : ARRAY [7] OF Decimal;
      BalanceType@1006 : ',StartBal,StartBalACY,StartBalCredit,StartBalDebit,EndBalCredit,EndBalDebit,EndBal';
      SourceType@1470003 : ' ,Customer,Vendor,Bank Account,Fixed Asset';
      SourceNo@1470004 : Code[20];
      NoEmphasize@19074284 : Boolean INDATASET;
      NameEmphasize@19018670 : Boolean INDATASET;
      NameIndent@19079073 : Integer INDATASET;
      DebitAmountEmphasize@19070960 : Boolean INDATASET;
      CreditAmountEmphasize@19071010 : Boolean INDATASET;
      BalanceEndPeriodEmphasize@19011846 : Boolean INDATASET;
      NetChangeEmphasize@19025187 : Boolean INDATASET;

    PROCEDURE DrillDownGLEntry@5(Show@1210000 : 'Debit,Credit,ACYDebet,ACYCredit,BeginPeriod,ACYBeginPeriod');
    BEGIN
      GLEntry.RESET;
      IF (GETFILTER("Business Unit Filter") <> '') OR
         (GETFILTER("Global Dimension 1 Filter") <> '') OR
         (GETFILTER("Global Dimension 2 Filter") <> '')
      THEN
        GLEntry.SETCURRENTKEY("G/L Account No.","Business Unit Code","Global Dimension 1 Code","Global Dimension 2 Code")
      ELSE
        GLEntry.SETCURRENTKEY("G/L Account No.","Posting Date");
      IF Totaling = '' THEN
        GLEntry.SETRANGE("G/L Account No.","No.")
      ELSE
        GLEntry.SETFILTER("G/L Account No.",Totaling);
      GLEntry.SETFILTER("Posting Date",GETFILTER("Date Filter"));
      GLEntry.SETFILTER("Global Dimension 1 Code",GETFILTER("Global Dimension 1 Filter"));
      GLEntry.SETFILTER("Global Dimension 2 Code",GETFILTER("Global Dimension 2 Filter"));
      GLEntry.SETFILTER("Business Unit Code",GETFILTER("Business Unit Filter"));
      GLEntry.SETFILTER("Source Type",GETFILTER("Source Type Filter"));
      GLEntry.SETFILTER("Source No.",GETFILTER("Source No. Filter"));
      CASE Show OF
        Show::Debit:
          GLEntry.SETFILTER("Debit Amount",'<>%1',0);
        Show::Credit:
          GLEntry.SETFILTER("Credit Amount",'<>%1',0);
        Show::ACYDebet:
          GLEntry.SETFILTER("Add.-Currency Debit Amount",'<>%1',0);
        Show::ACYCredit:
          GLEntry.SETFILTER("Add.-Currency Credit Amount",'<>%1',0);
        Show::BeginPeriod,
        Show::ACYBeginPeriod:
          IF COPYSTR(GETFILTER("Date Filter"),1,2) <> '..' THEN BEGIN
            IF GETRANGEMIN("Date Filter") <> 0D THEN
              GLEntry.SETRANGE("Posting Date",0D,CLOSINGDATE(GETRANGEMIN("Date Filter") - 1));
          END ELSE
            EXIT;
        ELSE
          ERROR('');
      END;
      PAGE.RUN(0,GLEntry);
    END;

    LOCAL PROCEDURE SourceTypeOnAfterValidate@19035402();
    BEGIN
      IF SourceType > 0 THEN
        SETFILTER("Source Type Filter",'%1',SourceType)
      ELSE BEGIN
        SETRANGE("Source Type Filter");
        SETRANGE("Source No. Filter");
        SourceNo := '';
      END;
    END;

    LOCAL PROCEDURE UpdateSourceNoFilter@19036011();
    BEGIN
      IF SourceNo <> '' THEN
        SETFILTER("Source No. Filter",'%1',SourceNo)
      ELSE
        SETRANGE("Source No. Filter");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE NoOnFormat@19031395();
    BEGIN
      NoEmphasize := "Account Type" <> "Account Type"::Posting;
    END;

    LOCAL PROCEDURE NameOnFormat@19039177();
    BEGIN
      NameIndent := Indentation;
      NameEmphasize := "Account Type" <> "Account Type"::Posting;
    END;

    LOCAL PROCEDURE DebitAmountOnFormat@19036667();
    BEGIN
      DebitAmountEmphasize := "Account Type" <> "Account Type"::Posting;
    END;

    LOCAL PROCEDURE CreditAmountOnFormat@19075481();
    BEGIN
      CreditAmountEmphasize := "Account Type" <> "Account Type"::Posting;
    END;

    LOCAL PROCEDURE BalanceatDateOnFormat@19079670();
    BEGIN
      BalanceEndPeriodEmphasize := "Account Type" <> "Account Type"::Posting;
    END;

    LOCAL PROCEDURE NetChangeOnFormat@19074173();
    BEGIN
      NetChangeEmphasize := "Account Type" <> "Account Type"::Posting;
    END;

    PROCEDURE FindPeriod@6(SearchText@1210000 : Code[10]);
    VAR
      Calendar@1210001 : Record 2000000007;
      PeriodFormManagement@1210003 : Codeunit 359;
    BEGIN
      IF GETFILTER("Date Filter") <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",GETFILTER("Date Filter"));
        IF NOT PeriodFormManagement.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormManagement.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormManagement.FindDate(SearchText,Calendar,PeriodType);
      IF Calendar."Period Start" = Calendar."Period End" THEN
        SETRANGE("Date Filter",Calendar."Period Start")
      ELSE
        SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
    END;

    PROCEDURE FindUserPeriod@1(SearchText@1210000 : Code[10]);
    VAR
      UserSetup@1000 : Record 91;
    BEGIN
      IF UserSetup.GET(USERID) THEN BEGIN
        SETRANGE("Date Filter",UserSetup."Allow Posting From",UserSetup."Allow Posting To");
        IF GETRANGEMIN("Date Filter") = GETRANGEMAX("Date Filter") THEN
          SETRANGE("Date Filter",GETRANGEMIN("Date Filter"));
      END ELSE
        FindPeriod(SearchText);
    END;

    LOCAL PROCEDURE CalculateAmounts@69590(VAR BalanceAmounts@69590 : ARRAY [7] OF Decimal);
    VAR
      GLAcc@69591 : Record 15;
      BalanceType@69592 : ',StartBal,StartBalACY,StartBalCredit,StartBalDebit,EndBalCredit,EndBalDebit,EndBal';
    BEGIN
      CLEAR(BalanceAmounts);

      IF COPYSTR(GETFILTER("Date Filter"),1,2) <> '..' THEN
        IF GETRANGEMIN("Date Filter") <> 0D THEN BEGIN
          GLAcc.RESET;
          GLAcc.GET("No.");
          GLAcc.COPYFILTERS(Rec);
          GLAcc.SETRANGE("Date Filter",0D,CLOSINGDATE(CALCDATE('<-1D>',GETRANGEMIN("Date Filter"))));
          GLAcc.CALCFIELDS(
            "RUL Balance at Date","RUL Balance at Date (ACY)",
            "Credit Amount at Date","Debit Amount at Date");
          BalanceAmounts[BalanceType::StartBal] := GLAcc."RUL Balance at Date";
          BalanceAmounts[BalanceType::StartBalACY] := GLAcc."RUL Balance at Date (ACY)";
          BalanceAmounts[BalanceType::StartBalDebit] := GLAcc."Debit Amount at Date";
          BalanceAmounts[BalanceType::StartBalCredit] := GLAcc."Credit Amount at Date";

          GLAcc.SETRANGE("Date Filter",GETRANGEMAX("Date Filter"));
          GLAcc.CALCFIELDS("Credit Amount at Date","Debit Amount at Date","RUL Balance at Date");
          BalanceAmounts[BalanceType::EndBalDebit] := GLAcc."Debit Amount at Date";
          BalanceAmounts[BalanceType::EndBalCredit] := GLAcc."Credit Amount at Date";
          BalanceAmounts[BalanceType::EndBal] := GLAcc."RUL Balance at Date";
        END;
    END;

    LOCAL PROCEDURE LookUpDimFilter@69595(Dim@69590 : Code[20];VAR Text@69591 : Text[250]) : Boolean;
    VAR
      DimVal@69592 : Record 349;
      DimValList@69593 : Page 560;
    BEGIN
      IF Dim = '' THEN
        EXIT(FALSE);
      DimValList.LOOKUPMODE(TRUE);
      DimVal.SETRANGE("Dimension Code",Dim);
      DimValList.SETTABLEVIEW(DimVal);
      IF DimValList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        DimValList.GETRECORD(DimVal);
        Text := DimValList.GetSelectionFilter;
      END;
      EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

